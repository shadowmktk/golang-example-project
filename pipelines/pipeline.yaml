apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: golang-example-pipiline
  namespace: golang-example
spec:
  workspaces:
  - name: source-volume
    persistentVolumeClaim:
      claimName: shared-data
  - name: empty-dir
    emptyDir: {}
  - name: ssh-creds
    secret:
      secretName: git-credentials
  params:
  - name: REVISION
    value: main
  pipelineSpec:
    workspaces:
    - name: source-volume
    params:
      - name: REVISION
        type: string
        default: ""
    tasks:
    - name: git-clone-sourcecode
      taskRef:
        resolver: cluster
        params:
        - name: name
          value: git-clone
        - name: kind
          value: task
        - name: namespace
          value: project-pipelines
      workspaces:
      - name: output
        workspace: source-volume
      - name: ssh-directory
        workspace: ssh-creds
      params:
      - name: url
        value: git@github.com:shadowmktk/golang-example-project.git
      - name: revision
        value: $(params.REVISION)
      - name: subdirectory
        value: sourcecode

    - name: git-clone-deployment
      runAfter:
      - git-clone-sourcecode
      taskRef:
        resolver: cluster
        params:
        - name: name
          value: git-clone
        - name: kind
          value: task
        - name: namespace
          value: project-pipelines
      workspaces:
      - name: output
        workspace: source-volume
      - name: ssh-directory
        workspace: ssh-creds
      params:
      - name: url
        value: git@github.com:shadowmktk/golang-example-deployments.git
      - name: revision
        value: $(params.REVISION)
      - name: subdirectory
        value: deployment
      - name: sslVerify
        value: false

    - name: manifest-update
      runAfter:
      - git-clone-deployment
      taskRef:
        resolver: cluster
        params:
        - name: name
          value: git-cli
        - name: kind
          value: task
        - name: namespace
          value: project-pipelines
      workspaces:
      - name: source
        workspace: source-volume
      - name: ssh-directory
        workspace: ssh-creds
      params:
      - name: BASE_IMAGE
        value: registry.cn-hangzhou.aliyuncs.com/cloud-native-cn/git-init:v0.40.2
      - name: GIT_USER_NAME
        value: devops-robot
      - name: GIT_USER_EMAIL
        value: devops-robot@devops.io
      - name: USER_HOME
        value: /home/git
      - name: GIT_SCRIPT
        value: |
          PROJECT_IMAGE_URL=registry.cn-hangzhou.aliyuncs.com/cloud-native-cn/golang-example:$(tasks.git-clone.results.commit)
          #PROJECT_IMAGE_URL=$(task.image-build.results.IMAGE_URL)
          PROJECT_SOURCE_DIRECTORY=$(workspaces.source.path)/deployment
          PROJECT_DEPLOY_FILE=$PROJECT_SOURCE_DIRECTORY/deployments/test/golang-example.yaml

          cd deployment
          sed -i "s@golang:.*@$PROJECT_IMAGE_URL@g" $PROJECT_DEPLOY_FILE

          git config --global --add safe.directory $PROJECT_SOURCE_DIRECTORY
          git add $PROJECT_DEPLOY_FILE
          git commit -a -m "automatic update by pipeline bot: $PROJECT_IMAGE_URL"
          git push origin HEAD:$(params.REVISION) --force
